CREATE TABLE LOGIN 
(
  USER_ID NUMBER(*, 0) NOT NULL 
, USERNAME VARCHAR2(20 BYTE) NOT NULL 
, PASSWORD_ VARCHAR2(20 BYTE) NOT NULL 
, CONSTRAINT SYS_C007425 PRIMARY KEY 
  (
    USER_ID 
  )
  USING INDEX 
  (
      CREATE UNIQUE INDEX SYS_C007425 ON LOGIN (USER_ID ASC) 
      LOGGING 
      TABLESPACE SYSTEM 
      PCTFREE 10 
      INITRANS 2 
      STORAGE 
      ( 
        INITIAL 65536 
        NEXT 1048576 
        MINEXTENTS 1 
        MAXEXTENTS UNLIMITED 
        FREELISTS 1 
        FREELIST GROUPS 1 
        BUFFER_POOL DEFAULT 
      ) 
      NOPARALLEL 
  )
  ENABLE 
) 
LOGGING 
TABLESPACE SYSTEM 
PCTFREE 10 
PCTUSED 40 
INITRANS 1 
STORAGE 
( 
  INITIAL 65536 
  NEXT 1048576 
  MINEXTENTS 1 
  MAXEXTENTS UNLIMITED 
  FREELISTS 1 
  FREELIST GROUPS 1 
  BUFFER_POOL DEFAULT 
) 
NOPARALLEL;

CREATE TABLE ASSIGNMENTS 
(
  ASSIGNMENTID NUMBER(*, 0) NOT NULL 
, STUDENTID NUMBER(*, 0) 
, SUBJECTID NUMBER(*, 0) 
, SUBMISSIONDATE DATE 
, CONSTRAINT ASSIGNMENTS_PK PRIMARY KEY 
  (
    ASSIGNMENTID 
  )
  USING INDEX 
  (
      CREATE UNIQUE INDEX ASSIGNMENTS_PK ON ASSIGNMENTS (ASSIGNMENTID ASC) 
      LOGGING 
      TABLESPACE SYSTEM 
      PCTFREE 10 
      INITRANS 2 
      STORAGE 
      ( 
        INITIAL 65536 
        NEXT 1048576 
        MINEXTENTS 1 
        MAXEXTENTS UNLIMITED 
        FREELISTS 1 
        FREELIST GROUPS 1 
        BUFFER_POOL DEFAULT 
      ) 
      NOPARALLEL 
  )
  ENABLE 
) 
LOGGING 
TABLESPACE SYSTEM 
PCTFREE 10 
PCTUSED 40 
INITRANS 1 
STORAGE 
( 
  INITIAL 65536 
  NEXT 1048576 
  MINEXTENTS 1 
  MAXEXTENTS UNLIMITED 
  FREELISTS 1 
  FREELIST GROUPS 1 
  BUFFER_POOL DEFAULT 
) 
NOPARALLEL;

ALTER TABLE ASSIGNMENTS
ADD CONSTRAINT ASSIGNMENTS_FK1 FOREIGN KEY
(
  STUDENTID 
)
REFERENCES STUDENTS
(
  STUDENTID 
)
ENABLE;

ALTER TABLE ASSIGNMENTS
ADD CONSTRAINT ASSIGNMENTS_FK2 FOREIGN KEY
(
  SUBJECTID 
)
REFERENCES SUBJECTS
(
  SUBJECTID 
)
ENABLE;

CREATE TABLE FEEDBACKS 
(
  FEEDBACKID NUMBER(*, 0) NOT NULL 
, SUBJECTID NUMBER(*, 0) 
, TEACHERID NUMBER(*, 0) 
, DISPATCHDATE DATE 
, SUBMISSIONON DATE 
, CONSTRAINT FEEDBACKS_PK PRIMARY KEY 
  (
    FEEDBACKID 
  )
  USING INDEX 
  (
      CREATE UNIQUE INDEX FEEDBACKS_PK ON FEEDBACKS (FEEDBACKID ASC) 
      LOGGING 
      TABLESPACE SYSTEM 
      PCTFREE 10 
      INITRANS 2 
      STORAGE 
      ( 
        INITIAL 65536 
        NEXT 1048576 
        MINEXTENTS 1 
        MAXEXTENTS UNLIMITED 
        FREELISTS 1 
        FREELIST GROUPS 1 
        BUFFER_POOL DEFAULT 
      ) 
      NOPARALLEL 
  )
  ENABLE 
) 
LOGGING 
TABLESPACE SYSTEM 
PCTFREE 10 
PCTUSED 40 
INITRANS 1 
STORAGE 
( 
  INITIAL 65536 
  NEXT 1048576 
  MINEXTENTS 1 
  MAXEXTENTS UNLIMITED 
  FREELISTS 1 
  FREELIST GROUPS 1 
  BUFFER_POOL DEFAULT 
) 
NOPARALLEL;

ALTER TABLE FEEDBACKS
ADD CONSTRAINT FEEDBACKS_FK1 FOREIGN KEY
(
  SUBJECTID 
)
REFERENCES SUBJECTS
(
  SUBJECTID 
)
ENABLE;

ALTER TABLE FEEDBACKS
ADD CONSTRAINT FEEDBACKS_FK2 FOREIGN KEY
(
  TEACHERID 
)
REFERENCES TEACHERS
(
  TEACHERID 
)
ENABLE;

CREATE TABLE STUDENTS 
(
  STUDENTID NUMBER(*, 0) NOT NULL 
, STUDENTNAME VARCHAR2(100 BYTE) NOT NULL 
, SEMESTER VARCHAR2(100 BYTE) 
, SECTION VARCHAR2(100 BYTE) 
, CONSTRAINT STUDENTS_PK PRIMARY KEY 
  (
    STUDENTID 
  )
  USING INDEX 
  (
      CREATE UNIQUE INDEX STUDENTS_PK ON STUDENTS (STUDENTID ASC) 
      LOGGING 
      TABLESPACE SYSTEM 
      PCTFREE 10 
      INITRANS 2 
      STORAGE 
      ( 
        INITIAL 65536 
        NEXT 1048576 
        MINEXTENTS 1 
        MAXEXTENTS UNLIMITED 
        FREELISTS 1 
        FREELIST GROUPS 1 
        BUFFER_POOL DEFAULT 
      ) 
      NOPARALLEL 
  )
  ENABLE 
) 
LOGGING 
TABLESPACE SYSTEM 
PCTFREE 10 
PCTUSED 40 
INITRANS 1 
STORAGE 
( 
  INITIAL 65536 
  NEXT 1048576 
  MINEXTENTS 1 
  MAXEXTENTS UNLIMITED 
  FREELISTS 1 
  FREELIST GROUPS 1 
  BUFFER_POOL DEFAULT 
) 
NOPARALLEL;

CREATE TABLE SUBJECTS 
(
  SUBJECTID NUMBER(*, 0) NOT NULL 
, SUBJECTCODE VARCHAR2(100 BYTE) 
, SUBJECTNAME VARCHAR2(100 BYTE) 
, CREDIT VARCHAR2(100 BYTE) 
, RELEASEDATE DATE 
, DEADLINE DATE 
, CONSTRAINT SUBJECTS_PK PRIMARY KEY 
  (
    SUBJECTID 
  )
  USING INDEX 
  (
      CREATE UNIQUE INDEX SUBJECTS_PK ON SUBJECTS (SUBJECTID ASC) 
      LOGGING 
      TABLESPACE SYSTEM 
      PCTFREE 10 
      INITRANS 2 
      STORAGE 
      ( 
        INITIAL 65536 
        NEXT 1048576 
        MINEXTENTS 1 
        MAXEXTENTS UNLIMITED 
        FREELISTS 1 
        FREELIST GROUPS 1 
        BUFFER_POOL DEFAULT 
      ) 
      NOPARALLEL 
  )
  ENABLE 
) 
LOGGING 
TABLESPACE SYSTEM 
PCTFREE 10 
PCTUSED 40 
INITRANS 1 
STORAGE 
( 
  INITIAL 65536 
  NEXT 1048576 
  MINEXTENTS 1 
  MAXEXTENTS UNLIMITED 
  FREELISTS 1 
  FREELIST GROUPS 1 
  BUFFER_POOL DEFAULT 
) 
NOPARALLEL;

CREATE TABLE TEACHERS 
(
  TEACHERID NUMBER(*, 0) NOT NULL 
, TEACHERNAME VARCHAR2(100 BYTE) 
, QUALIFICATION VARCHAR2(100 BYTE) 
, CONSTRAINT TEACHERS_PK PRIMARY KEY 
  (
    TEACHERID 
  )
  USING INDEX 
  (
      CREATE UNIQUE INDEX TEACHERS_PK ON TEACHERS (TEACHERID ASC) 
      LOGGING 
      TABLESPACE SYSTEM 
      PCTFREE 10 
      INITRANS 2 
      STORAGE 
      ( 
        INITIAL 65536 
        NEXT 1048576 
        MINEXTENTS 1 
        MAXEXTENTS UNLIMITED 
        FREELISTS 1 
        FREELIST GROUPS 1 
        BUFFER_POOL DEFAULT 
      ) 
      NOPARALLEL 
  )
  ENABLE 
) 
LOGGING 
TABLESPACE SYSTEM 
PCTFREE 10 
PCTUSED 40 
INITRANS 1 
STORAGE 
( 
  INITIAL 65536 
  NEXT 1048576 
  MINEXTENTS 1 
  MAXEXTENTS UNLIMITED 
  FREELISTS 1 
  FREELIST GROUPS 1 
  BUFFER_POOL DEFAULT 
) 
NOPARALLEL;


CREATE SEQUENCE LOGIN_SEQ INCREMENT BY 1 MAXVALUE 9999999999999999999999999999 MINVALUE 1 CACHE 20;

CREATE SEQUENCE ASSIGNMENTS_SEQ INCREMENT BY 1 MAXVALUE 9999999999999999999999999999 MINVALUE 1 CACHE 20;

CREATE SEQUENCE FEEDBACKS_SEQ INCREMENT BY 1 MAXVALUE 9999999999999999999999999999 MINVALUE 1 CACHE 20;

CREATE SEQUENCE STUDENTS_SEQ INCREMENT BY 1 MAXVALUE 9999999999999999999999999999 MINVALUE 1 CACHE 20;

CREATE SEQUENCE SUBJECTS_SEQ INCREMENT BY 1 MAXVALUE 9999999999999999999999999999 MINVALUE 1 CACHE 20;

CREATE SEQUENCE TEACHERS_SEQ INCREMENT BY 1 MAXVALUE 9999999999999999999999999999 MINVALUE 1 CACHE 20;

create or replace TRIGGER LOGIN_TRG 
BEFORE INSERT ON LOGIN 
FOR EACH ROW 
BEGIN
  <<COLUMN_SEQUENCES>>
  BEGIN
    IF INSERTING AND :NEW.USER_ID IS NULL THEN
      SELECT LOGIN_SEQ.NEXTVAL INTO :NEW.USER_ID FROM SYS.DUAL;
    END IF;
  END COLUMN_SEQUENCES;
END;

create or replace TRIGGER ASSIGNMENTS_TRG 
BEFORE INSERT ON ASSIGNMENTS 
FOR EACH ROW 
BEGIN
  <<COLUMN_SEQUENCES>>
  BEGIN
    IF INSERTING AND :NEW.ASSIGNMENTID IS NULL THEN
      SELECT ASSIGNMENTS_SEQ.NEXTVAL INTO :NEW.ASSIGNMENTID FROM SYS.DUAL;
    END IF;
  END COLUMN_SEQUENCES;
END;

create or replace TRIGGER FEEDBACKS_TRG 
BEFORE INSERT ON FEEDBACKS 
FOR EACH ROW 
BEGIN
  <<COLUMN_SEQUENCES>>
  BEGIN
    NULL;
  END COLUMN_SEQUENCES;
END;

create or replace TRIGGER STUDENT_COLUMN_SEQ_TRG 
BEFORE INSERT ON STUDENTS 
FOR EACH ROW 
BEGIN
  <<COLUMN_SEQUENCES>>
  BEGIN
    IF INSERTING AND :NEW.STUDENTID IS NULL THEN
      SELECT STUDENTS_SEQ.NEXTVAL INTO :NEW.STUDENTID FROM SYS.DUAL;
    END IF;
  END COLUMN_SEQUENCES;
END;

create or replace TRIGGER SUBJECTS_TRG 
BEFORE INSERT ON SUBJECTS 
FOR EACH ROW 
BEGIN
  <<COLUMN_SEQUENCES>>
  BEGIN
    IF INSERTING AND :NEW.SUBJECTID IS NULL THEN
      SELECT SUBJECTS_SEQ2.NEXTVAL INTO :NEW.SUBJECTID FROM SYS.DUAL;
    END IF;
  END COLUMN_SEQUENCES;
END;

create or replace TRIGGER TEACHERS_TRG 
BEFORE INSERT ON TEACHERS 
FOR EACH ROW 
BEGIN
  <<COLUMN_SEQUENCES>>
  BEGIN
    IF INSERTING AND :NEW.TEACHERID IS NULL THEN
      SELECT TEACHERS_SEQ.NEXTVAL INTO :NEW.TEACHERID FROM SYS.DUAL;
    END IF;
  END COLUMN_SEQUENCES;
END;

